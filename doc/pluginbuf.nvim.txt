*pluginbuf.nvim.txt*

==============================================================================
Lua module: pluginbuf                               *pluginbuf.nvim-pluginbuf*

register({scheme_name}, {route_definitions})            *pluginbuf.register()*
  Registers scheme handler.

  Parameters: ~
    {scheme_name} (string) TODO
    {route_definitions} (PluginbufRouteDefinition[]) |PluginbufRouteDefinition|

==============================================================================
STRUCTURE                                           *pluginbuf.nvim-STRUCTURE*

PluginbufRouteDefinition                            *PluginbufRouteDefinition*

- {path} (string) TODO
- {read} (fun(ctx)?) TODO
- {write} (fun(ctx)?) TODO

==============================================================================
EXAMPLES                                             *pluginbuf.nvim-EXAMPLES*

>
  local util = require("pluginbuf.util")
  require("pluginbuf").register("gh-repo-description", {
    {
      path = "/{owner}/{repo}",
      read = function(ctx)
        local onwer_repo = ctx.path_params.owner .. "/" .. ctx.path_params.repo
        return util.cmd_output({ "gh", "repo", "view", onwer_repo, "--json=description", "--jq=.description" })(ctx)
      end,
      write = function(ctx)
        local onwer_repo = ctx.path_params.owner .. "/" .. ctx.path_params.repo
        return util.cmd_input({ "gh", "repo", "edit", onwer_repo, "--description", "-" })(ctx)
      end,
    },
  })
  vim.cmd.tabedit("gh-repo-description://notomo/pluginbuf.nvim")

<

==============================================================================
vim:tw=78:ts=8:ft=help
